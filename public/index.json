[{"content":"The Hugo Paged theme was inspired by the paged.js website. The paged.js website The paged.js library is awesome. Its website is also beautiful. The crop marks I love the crop marks. I couldn’t imagine that they were made from three rectangles: Make their position absolute, and shrink them a little bit: .crop-h, .crop-v, .crop-c { position: absolute; z-index: -1; } .crop-h { inset: 2em 0; border-top: 1px solid; border-bottom: 1px solid; } .crop-v { inset: 0 2em; border-left: 1px solid; border-right: 1px solid; } .crop-c { inset: 1em; border: 1.5em solid white; } Isn’t that clever? Thank you, paged.js developers! The floral heart I also love the floral heart behind the title of each page, which is a dingbat: h1.title::before { content: \"❧\"; } Making a Hugo theme Once I understood the above tricks, I developed a Hugo theme based on my previous Hugo XMin theme. This theme is still very lightweight. The total number of lines of CSS is about 240. Blog and/or documentation This theme supports two types of lists of pages: blog and documentation. A blog list shows the post summaries in the list. You can either define a post summary via the description field in the YAML metadata of a post, or let this theme generate an automatic summary from the paragraphs of your post. A documentation list shows the tables of contents of documentation pages. This is similar to the table of contents of a book, so you could use this theme to write a book (or two). By default, pages under the content/blog directory will use the blog list, and pages under content/docs will use the documentation list. If you want other pages to use the blog or docs list layout, you can specify the layout field in the YAML metadata of _index.md (e.g., layout: docs in content/foo/_index.md). If you want to order pages manually in the list, you can set the weight field in the YAML metadata of pages. ","title":"Introduction","uri":"/docs/01-intro/"},{"content":"There are two ways to get started with this theme, depending on whether you use R or Hugo.\nR users If you use R, the easiest way to get started is to install the blogdown package, and create a new site with this theme:\ninstall.packages('blogdown') blogdown::new_site(theme = 'yihui/hugo-paged') Or you can create a new RStudio blogdown project (if you use RStudio) with the yihui/hugo-paged theme.\nHugo users Create a new Hugo site with hugo new. Download this theme from Github and unzip it to the themes/hugo-paged directory. Move all content of the exampleSite directory in this theme to the root directory of the new site. Run hugo server and start playing with the new site. ","title":"Getting started","uri":"/docs/02-get-started/"},{"content":"The more you know, the less real work you will get done. You have been warned. Site config In your site config file (hugo.yaml or config.yaml), you can customize some options such as the top menu or footer, which should be straightforward to understand if you take a look at the exampleSite’s config file. If you want to add a logo to the left of the top navigation bar, you can use the logo parameter, e.g., params: logo: en: alt: \"LOGO TEXT\" img: # a path to the logo If the image (img) is not provided, the alt text will be displayed instead. The table of contents (TOC) is automatically added to each post by default when the number of items in TOC is greater than or equal to 3. This number can be set in the toc_threshold parameter, e.g., params: toc_threshold: 4 To always disable TOC for a particular post, set the YAML field show_toc: false in the post. To always show TOC, set show_toc: true. The TOC will use a full-width two-column layout on large screens by default when the number of items is greater than or equal to 16. This number can be configured in the toc_twocolumn parameter, e.g., params: toc_twocolumn: 10 You can also enable or disable this behavior in a post’s YAML field toc_twocolumn (set it to true or false). CSS You can create a file static/css/custom.css to store your custom CSS code. For example, if you don’t like code blocks to be full-width, you can reset their width: @media (min-width: 768px) { .main \u003e pre { width: 100%; margin-left: auto; } } Dingbats If you want to choose a different symbol such as a snow flake to be placed behind the page title, you can define the CSS: h1.title::before { content: \"❆\"; } Any character that can be displayed in your web browser is okay. For example, you can choose one dingbat from https://en.wikipedia.org/wiki/Dingbat. ✁\t✂\t✃\t✄\t✆\t✇\t✈\t✉\t✎\t✏ ✐\t✑\t✒\t✓\t✔\t✕\t✖\t✗\t✘\t✙\t✚\t✛\t✜\t✝\t✞\t✟ ✠\t✡\t✢\t✣\t✤\t✥\t✦\t✧\t✩\t✪\t✫\t✬\t✭\t✮\t✯ ✰\t✱\t✲\t✳\t✴\t✵\t✶\t✷\t✸\t✹\t✺\t✻\t✼\t✽\t✾\t✿ ❀\t❁\t❂\t❃\t❄\t❅\t❆\t❇\t❈\t❉\t❊\t❋\t❍\t❏ ❐\t❑\t❒\t❔\t❕\t❖\t❘\t❙\t❚\t❛\t❜\t❝\t❞\t❡\t❢\t❣\t❤\t❥\t❦\t❧\t❨\t❩\t❪\t❫\t❬\t❭\t❮\t❯ ❰\t❱\t❲\t❳\t❴\t❵ ➔\t➘\t➙\t➚\t➛\t➜\t➝\t➞\t➟ ➠\t➡\t➢\t➣\t➤\t➥\t➦\t➧\t➨\t➩\t➪\t➫\t➬\t➭\t➮\t➯\t➱\t➲\t➳\t➴\t➵\t➶\t➷\t➸\t➹\t➺\t➻\t➼\t➽\t➾ Sticky menu It’s easy to make the top menu sticky if you desire: .nav-top { position: sticky; top: 0; background-color: white; } Typefaces If you don’t like the default typefaces of this theme, you can create static/css/fonts.css to override them. Templates As the last (and most powerful) resort, you can always override the template files under layouts/. I don’t really have enough time to document everything. Please try to help yourself. ","title":"Customization","uri":"/docs/03-customization/"},{"content":" I immediately loved the design of the paged.js website when I first saw it a couple of years ago.1 I have published a few books before, so the crop marks on the website caught my attention first, which gave me a familiar feel of printed books. The second thing that I appreciated was the rotated floral heart bullet behind the title of each page, i.e.,\n❧ So I wrote a Hugo theme that mimics the style of the paged.js website. I tried not to look at its HTML/CSS source code, but I had to read the source to figure out:\nHow the crop marks were made with CSS (a very clever trick that I’d never thought of); What the floral heart symbol really was (I’d never know this dingbat); The fonts (Linden Hill and Jost). The rest of HTML and CSS code was written from scratch (well, not really—from the Hugo XMin theme). The code is fairly lightweight and hopefully easy for users to understand, tweak, or adapt.\nI’d like to thank paged.js developers for their great piece of work, without which I wouldn’t be able to create this theme.\nI hope this theme won’t be widely known or used because I’m currently using it for my own website…2 but I’m all for open source, so here you go! If you decide to use this theme, I encourage you to tweak the CSS to make your site look at least a little different.\nWhen I was developing the pagedown package in R. ↩︎\nPaged.js developers are more generous than me. They were quite happy to know that I created this Hugo theme, and were not concerned that other websites would use their website theme. Hat tip to them! ↩︎\n","title":"About Hugo Paged","uri":"/about/"},{"content":" The searching is performed via fuse.js. For the search keywords, white spaces act as the AND operator, and | acts as the OR operator. To match an exact phrase, double quote it. For example, R Markdown matches articles that contain both R and Markdown, R | Markdown matches articles that contain R or Markdown, and \"R Markdown\" matches articles that contain the whole phrase R Markdown.\n","title":"Search","uri":"/search/"}]
